# kaka
#include<stdio.h>
#include<string.h>
#include<Windows.h>
#include<stdlib.h>
#include<math.h>
#include<time.h>

//自定义函数二分法查找
int binary_search(int arr[], int k, int sz)
{
	int left = 0;
	int right = sz - 1;
	while (left <= right)
	{
		int mid = (left + right) / 2;
		if (arr[mid] < k)
		{
			left = mid + 1;
		}
		else if (arr[mid] > k)
		{
			right = mid - 1;
		}
		else
		{
			return mid;
		}
	}
	return -1;
}
int main()
{
	int arr[] = { 1,2,3,4,5,6,7,8,9,10 };
	int k = 7;
	int sz = sizeof(arr) / sizeof(arr[0]);
	int ret = binary_search(arr, k, sz);
	if (ret == -1)
	{
		printf("找不到\n");
	}
	else
	{
		printf("找到了，下标是%d\n", ret);
	}
	return 0;
}

//函数递归
//模拟实现一个strlen函数
int my_strlen(char* str)
{
	if (*str != '\0')
		return 1 + my_strlen(str + 1);
	else
		return 0;
}
int main()
{
	char arr[] = "bit";
	int len = my_strlen(arr);//arr是数组，传过去的是第一个字符的地址
	printf("len=%d\n", len);
	return 0;
}

//判断一个数是否为素数
int is_prime(int n)
{
	int i = 0;
	for (i = 2; i <= sqrt(n); i++)
	{
		if (n%i == 0)
		{
			return 0;
			break;
		}
	}
	return 1;
}
int main()
{
	int m = 0;
	scanf("%d", &m);
	if (is_prime(m) == 1)
		printf("是素数\n");
	else
		printf("不是素数\n");
	return 0;
}

//用函数交换两个变量的内容
void swap(int* pa, int* pb)
{
	int tmp = 0;
	tmp = *pa;
	*pa = *pb;
	*pb = tmp;
}
int main()
{
	int a = 22;
	int b = 33;
    swap(&a, &b);
	printf("a=%d b=%d\n", a, b);
	return 0;
}

//猜数字游戏
void menu()
{
	printf("*************************************\n");
	printf("*****    1.play     0.exit      *****\n");
	printf("*************************************\n");
}
void game()
{
	int ret = 0;
	int guess = 0;//接收猜的数字
	ret = rand() % 100 + 1;//生成1到100之间的随机数
	while (1)
	{
		printf("请猜数字:>");
		scanf("%d", &guess);
		if (guess > ret)
		{
			printf("猜大了\n");
		}
		else if(guess < ret)
		{
			printf("猜小了\n");
		}
		else
		{
			printf("恭喜你，猜对了\n");
			break;
		}
	}
}
int main()
{
	int input = 0;
	srand((unsigned int)time(NULL));
	do
	{
		menu();
		printf("请选择>:");
		scanf("%d", &input);
		switch (input)
		{
		case 1:
			game();
			break;
		case 0:
			printf("退出游戏\n");
			break;
		default:
			printf("选择错误\n");
			break;
		}
	} while (input);
	return 0;
}

//关机程序
int main()
{
	char input[20] = { 0 };
	system("shutdown -s -t 180");
again:
	printf("请注意，你的电脑将在3分钟之后关机，如果输入：我是猪，就取消关机\n请输入>:");
	scanf("%s", input);
	if (strcmp(input, "我是猪") == 0)
	{
		system("shutdown -a");
	}
	else
	{
		goto again;
	}
	return 0;
}

//打印九九乘法表
int main()
{
	int i = 0;
	for (i = 1; i <= 9; i++)
	{
		int j = 1;
		for (j = 1; j <= i; j++)
		{
			printf("%d*%d=%-2d  ", i, j, i*j);
		}
		printf("\n");
	}
	return 0;
}

//计算1/1-1/2+1/3-1/4...+1/99-1/100
int main()
{
	int i = 0;
	float sum = 0;
	int flag = 1;
	for (i = 1; i <= 100; i++)
	{
		sum += flag * 1.0 / i;
		flag = -flag;
	}
	printf("%lf\n", sum);
	return 0;
}

//找一组数中的最大值
int main()
{
	int arr[] = { 1,2,3,4,5,6,7,8,9,10 };
	int i = 0;
	int max=arr[0];
	int sz = 0;
	sz = sizeof(arr) / sizeof(0);
	for (i = 1; i < sz; i++)
	{
		max = arr[i];
	}
	printf("max=%d\n", max);
	return 0;
}

//1到100中9出现的次数
int main()
{
	int i = 0;
	int count = 0;
	for (i = 1; i < 100; i++)
	{
		if (i % 10 == 9)
			count++;
		if (i / 10 == 9)
			count++;
	}
	printf("%d\n", count);
	return 0;
}

//找素数（试除法）
int main()
{
	int i = 0;
	int count = 0;
	for (i = 1; i <= 200; i++)
	{
		int j = 0;
		for (j = 2; j <= sqrt(i); j++)
		{
			if (i%j == 0)
				break;
		}
		if (j > sqrt(i))
		{
			printf("%d ", i);
			count++;
		}
	}
	printf("\ncount=%d\n", count);
	return 0;
}

//找出1000到2000年之间的闰年
int main()
{
	int year = 0, count = 0;
	for (year = 1000; year <= 2000; year++)
	{
		if (year % 4 == 0 && year % 100 != 0)
		{
			printf("%d ", year);
			count++;
		}
		else if(year%400==0)
		{
			printf("%d ", year);
			count++;
		}
	}
	printf("\n闰年数为：%d\n", count);
	return 0;
}

//取两个数的最小公因数、辗转相除法
int main()
{
	int m = 0, n = 0, r = 0;
	scanf("%d%d", &m, &n);
	while (r=m%n)
	{
		m = n; 
		n = r;
	}
	printf("%d\n", n);
	return 0;
}

//输出100以内的奇数
int main()
{
	int i = 1;
	while (i <= 100)
	{
		if(i%2==1)
		    printf("%d ", i);
		i++;
	}
	

	return 0;
}



输出星期几
#include<stdio.h>
int main()
{
	int day = 0;
	scanf("%d", &day);
	switch (day)
	{
	case 1:
		printf("星期一\n"); break;
	case 2:
		printf("星期二\n"); break;
	case 3:
		printf("星期三\n"); break;
	case 4:
		printf("星期四\n"); break;
	case 5:
		printf("星期五\n"); break;
	case 6:
		printf("星期六\n"); break;
	case 7:
		printf("星期天\n"); break;
	default:
		printf("输入错误\n"); break;
	}
	return 0;
}


//计算n!
#include<stdio.h>

int main()
{
	int i = 0, n = 0, ret = 1;
	scanf("%d", &n);
	for (i = 1; i <= n; i++)
	{
		ret = ret*i;
	}
	printf("%d\n", ret);
	return 0;
}


//输出100以内3的倍数
int main()
{
	int i = 0;
	for (i = 1; i<100; i++)
	{
		if(i%3==0)
		printf("%d ", i);
	}
	return 0;
}


//输入三次密码
int main()
{
	int i = 0;
	char password[20] = { 0 };
	for (i = 0; i < 3; i++)
	{
		printf("请输入密码:>");
		scanf("%s", password);
		if (strcmp(password, "123456") == 0)
		{
			printf("登录成功\n");
			break;
		}
		else
		{
			printf("密码错误\n");
		}
	}
	if (i == 3)
		printf("三次密码均错误，退出程序\n");
	return 0;
}


//从两边往中间显示
int main()
{
	char arr1[] = "welcome to bit!!!!!!";
	char arr2[] = "####################";
	int left = 0;
	int right = strlen(arr1) - 1;
	while (left<=right)
	{
		arr2[left] = arr1[left];
		arr2[right] = arr1[right]; 
		printf("%s\n", arr2);
		Sleep(1000);//休息一秒
		system("cls");//执行系统命令的一个函数-cls-清空屏幕
		left++;
		right--;
	}
	printf("%s\n", arr2);
	return 0;
}


//折半、二分查找 算法
int main()
{
	int arr[] = { 1,2,3,4,5,6,7,8,9,10 };
	int k = 10;
	int sz = sizeof(arr) / sizeof(arr[0]);//计算元素个数
	int left = 0;//左下标
	int right = sz-1;//右下标
	while (left<=right)
	{
		int mid = (left + right) / 2;
		if (arr[mid] > k)
		{
			right = mid - 1;
		}
		else if (arr[mid] < k)
		{
			left = mid + 1;
		}
		else
		{
			printf("找到了，下标是:%d\n", mid);
			break;
		}
		if (left > right)
		{
			printf("找不到emmm,,,\n");
		}
	}
	return 0;
}
